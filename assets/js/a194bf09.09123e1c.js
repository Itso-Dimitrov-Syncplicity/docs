"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||s;return n?r.createElement(b,a(a({ref:t},u),{},{components:n})):r.createElement(b,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4649:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const s={sidebar_position:7,sidebar_label:"How to check LDAP connection"},a="How to check LDAP connection",c={unversionedId:"issues-troubleshooting/HowToCheckLDAPConnection",id:"issues-troubleshooting/HowToCheckLDAPConnection",title:"How to check LDAP connection",description:"Firstly, check the availability of your LDAP server from the server when ReportPortal is installed. For example, use the command ldapsearch.",source:"@site/docs/issues-troubleshooting/HowToCheckLDAPConnection.md",sourceDirName:"issues-troubleshooting",slug:"/issues-troubleshooting/HowToCheckLDAPConnection",permalink:"/docs/issues-troubleshooting/HowToCheckLDAPConnection",draft:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/issues-troubleshooting/HowToCheckLDAPConnection.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,sidebar_label:"How to check LDAP connection"},sidebar:"defaultSidebar",previous:{title:"Resolve Analyzer Known Issues",permalink:"/docs/issues-troubleshooting/ResolveAnalyzerKnownIssues"},next:{title:"How to clean up the ReportPortal database using PG_REPACK",permalink:"/docs/issues-troubleshooting/HowToCleanUpTheReportPortalDatabaseUsingPGRepack"}},i={},l=[],u={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-check-ldap-connection"},"How to check LDAP connection"),(0,o.kt)("p",null,"Firstly, check the availability of your LDAP server from the server when ReportPortal is installed. For example, use the command ldapsearch."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ldapsearch -x -h <ldap hostname> -p <ldap port> -D "<bind DN>" -w "<bind password>" -b "<base users DN>" "uid=user1"\n')),(0,o.kt)("p",null,"Output will be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# extended LDIF\n#\n# LDAPv3\n# base <dc=rp,dc=com> with scope subtree\n# filter: uid=user1\n# requesting: ALL\n#\n\n# user1, people, rp.com\ndn: cn=tester,ou=people,dc=rp,dc=com\nobjectClass: inetOrgPerson\ncn: user1\nsn: user1\nuid: user1\nuserPassword:: PASSWORD\nmail: user1@rp.com\ndescription: user1 for experiments \n\n# search result\nsearch: 2\nresult: 0 Success\n\n# numResponses: 2\n# numEntries: 1\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hints")),(0,o.kt)("p",null,"If you are using docker you can also use the internal container IP  ",(0,o.kt)("inlineCode",{parentName:"p"},"docker inspect -f '\\{{range .NetworkSettings.Networks}}\\{{.IPAddress}}\\{{end}}' <LDAP container name>")))}p.isMDXComponent=!0}}]);