"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2932],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},74954:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},i="ReportPortal 5.0 File storage options",s={unversionedId:"installation-steps/ReportPortal5.0FileStorageOptions",id:"installation-steps/ReportPortal5.0FileStorageOptions",title:"ReportPortal 5.0 File storage options",description:"In ReportPortal 5.0 we use two ways to store log attachments, user pictures and plugins",source:"@site/docs/installation-steps/ReportPortal5.0FileStorageOptions.md",sourceDirName:"installation-steps",slug:"/installation-steps/ReportPortal5.0FileStorageOptions",permalink:"/docs/installation-steps/ReportPortal5.0FileStorageOptions",draft:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/installation-steps/ReportPortal5.0FileStorageOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Deploy with AWS ECS Fargate",permalink:"/docs/installation-steps/DeployWithAWSECSFargate"},next:{title:"ReportPortal Configuration",permalink:"/docs/category/reportportal-configuration"}},l={},p=[{value:"MinIO",id:"minio",level:3},{value:"Container&#39;s File system",id:"containers-file-system",level:3}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"reportportal-50-file-storage-options"},"ReportPortal 5.0 File storage options"),(0,o.kt)("p",null,"In ReportPortal 5.0 we use two ways to store log attachments, user pictures and plugins  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MinIO distributed object storage (by default)"),(0,o.kt)("li",{parentName:"ul"},"Container's File system")),(0,o.kt)("h3",{id:"minio"},"MinIO"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://min.io"},"MinIO")," is a high performance distributed object storage server and a preferable way of using our file storage. It stays on top of S3 or any other cloud storage, and allows to have a shared FS for several API and UAT pods in Kubernetes.  "),(0,o.kt)("p",null,"To set it up please use the following environment variables  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"RP_BINARYSTORE_MINIO_ENDPOINT for MinIO endpoint (address)"),(0,o.kt)("li",{parentName:"ul"},"RP_BINARYSTORE_MINIO_ACCESSKEY for MinIO accesskey "),(0,o.kt)("li",{parentName:"ul"},"RP_BINARYSTORE_MINIO_SECRETKEY for MinIO secretkey")),(0,o.kt)("p",null,"These variables should be configured in API and UAT services\nIt can be done in both, Docker and Kubernetes ReportPortal versions  "),(0,o.kt)("h3",{id:"containers-file-system"},"Container's File system"),(0,o.kt)("p",null,"The container's file system option is used when you want to store these data in a mounted folder in the service-api or/and service-uat containers  "),(0,o.kt)("p",null,"In order to use this option, please set environment variable RP_BINARYSTORE_TYPE to 'filesystem' in API and UAT services\nIt can be done in both, Docker and Kubernetes ReportPortal versions"))}u.isMDXComponent=!0}}]);