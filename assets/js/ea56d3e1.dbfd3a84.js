"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1451],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),v=i,m=d["".concat(l,".").concat(v)]||d[v]||u[v]||o;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6673:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const o={sidebar_position:1,sidebar_label:"Components Overview"},a="Components Overview",s={unversionedId:"reportportal-configuration/ComponentsOverview",id:"reportportal-configuration/ComponentsOverview",title:"Components Overview",description:"Gateway",source:"@site/docs/reportportal-configuration/ComponentsOverview.md",sourceDirName:"reportportal-configuration",slug:"/reportportal-configuration/ComponentsOverview",permalink:"/docs/reportportal-configuration/ComponentsOverview",draft:!1,editUrl:"https://github.com/reportportal/documentation/docs/reportportal-configuration/ComponentsOverview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Components Overview"},sidebar:"defaultSidebar",previous:{title:"ReportPortal Configuration",permalink:"/docs/category/reportportal-configuration"},next:{title:"Creation of project and adding users",permalink:"/docs/reportportal-configuration/CreationOfProjectAndAddingUsers"}},l={},c=[{value:"Gateway",id:"gateway",level:2},{value:"API Service",id:"api-service",level:2},{value:"UAT Service",id:"uat-service",level:2},{value:"Analyzer Service",id:"analyzer-service",level:2},{value:"Migrations Service",id:"migrations-service",level:2},{value:"Index Service",id:"index-service",level:2},{value:"UI Service",id:"ui-service",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"components-overview"},"Components Overview"),(0,i.kt)("h2",{id:"gateway"},"Gateway"),(0,i.kt)("p",null,"Gateway is a main entry point to application services. It is in-charge of routing requests to appropriate service and load balancing.\nThere are two options proposed:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://traefik.io"},"Traefik")," for Docker installation"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.nginx.com/products/nginx/kubernetes-ingress-controller"},"NGINX Ingress Controller")," for Kubernetes")),(0,i.kt)("h2",{id:"api-service"},"API Service"),(0,i.kt)("p",null,"The API service is the core of ReportPortal. It is in-charge of handling incoming requests from agents and UI. "),(0,i.kt)("h2",{id:"uat-service"},"UAT Service"),(0,i.kt)("p",null,"The UAT (Unified Authorization Trap) service is module that authenticate users and creates/revokes user tokens.\nIt supports various types of authentication mechanisms:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Basic Auth"),(0,i.kt)("li",{parentName:"ul"},"GitHub Auth (OAuth2)"),(0,i.kt)("li",{parentName:"ul"},"LDAP Auth\nThe UAT service itself is a OAuth2 server that authenticates a user using mechanisms mentioned\nbelow and creates internal OAuth2 token which is used by UI and agents. There are two types of tokens:"),(0,i.kt)("li",{parentName:"ul"},"UI (expiring token)"),(0,i.kt)("li",{parentName:"ul"},"API - non-expiring token, intended to use on agent side   ")),(0,i.kt)("h2",{id:"analyzer-service"},"Analyzer Service"),(0,i.kt)("p",null,"Keeps index of user logs per project and provides ability to perform search by that index. Used by auto-analysis functionality.",(0,i.kt)("br",{parentName:"p"}),"\n","Collects and processes the information, then sends it to Elasticsearch."),(0,i.kt)("h2",{id:"migrations-service"},"Migrations Service"),(0,i.kt)("p",null,"Database migrations written in Go. Migrate reads migrations from sources and applies them in correct order to a database.  "),(0,i.kt)("h2",{id:"index-service"},"Index Service"),(0,i.kt)("p",null,"The Index services handle requests that do not match any pattern of other services.\nIt also aggregates some information/health data from other services to provide UI with that information."),(0,i.kt)("h2",{id:"ui-service"},"UI Service"),(0,i.kt)("p",null,"All statics for user interface."))}u.isMDXComponent=!0}}]);